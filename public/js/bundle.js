var Feed = React.createClass({
    getInitialState: function() {
        return {amount: '60', source: 'Hipp'};
    },
    handleAmountChange: function(e) {
        this.setState({amount: e.target.value});
    },
    handleSourceChange: function(e) {
        this.setState({source: e.target.value});
    },
    handleSubmit: function(e) {
        e.preventDefault();
        console.log('Submit '+this.state.amount+ ' '+this.state.source)
        var amount = this.state.amount.trim()
        var source = this.state.source.trim()
        if (!amount || !source) {
            return;
        }
        this.props.onFeedSubmit({amount: amount, source: source});
        this.setState({amount: '60', source: 'Hipp'});
    },
    render: function () {

        return (
            <form className="form-inline" onSubmit={this.handleSubmit}>
                <div className="form-group">
                    <select className="form-control" id="amount" onChange={this.handleAmountChange} value={this.state.amount}>
                        <option>10</option>
                        <option>15</option>
                        <option>20</option>
                        <option>25</option>
                        <option>30</option>
                        <option>35</option>
                        <option>40</option>
                        <option>45</option>
                        <option>50</option>
                        <option>55</option>
                        <option>60</option>
                        <option>65</option>
                        <option>70</option>
                        <option>75</option>
                        <option>80</option>
                        <option>85</option>
                        <option>90</option>
                        <option>95</option>
                        <option>100</option>
                        <option>105</option>
                        <option>110</option>
                    </select>
                </div>
                <div className="form-group">
                    <label>
                        <select className="form-control" id="source" onChange={this.handleSourceChange} value={this.state.source}>
                            <option>Breast milk</option>
                            <option>Bottle milk</option>
                            <option>Hipp</option>
                        </select>
                    </label>
                </div>
                <button type="submit" className="btn btn-default">Submit</button>
            </form>
        )
    }
});

var HistoryRecord = React.createClass({
    render: function(){
        var date=this.props.date.getUTCDate()+'/'+(this.props.date.getUTCMonth()+1)+'/'+this.props.date.getUTCFullYear()+'   '+this.props.date.getUTCHours()+':'+this.props.date.getUTCMinutes()
        return (
            <tr>
                <td>
                    {date}
                </td>
                <td>
                    {this.props.amount}
                </td>
                <td>
                    {this.props.source}
                </td>
                <td>
                    {this.props.sum}
                </td>
            </tr>
        )
    }
});

var History = React.createClass({

    // Render our tweets
    render: function(){

        // Build list items of single tweet components using map
        var content = this.props.feeds.map(function(feed){
            return (
                <HistoryRecord key={feed.id} date={new Date(feed.date)} amount={feed.amount} source={feed.source} sum={feed.sum} />
            )
        });

        // Return ul filled with our mapped tweets
        return (
            <table className="table table-striped">
                <tbody>
                <tr>
                <th>Date</th>
                <th>Amount</th>
                <th>Source</th>
                <th>Sum for today</th>
                </tr>
                {content}
                </tbody>
            </table>
        )

    }

});


var MilkLogger = React.createClass({
    loadFeedsFromServer: function() {
        $.ajax({
            url: this.props.url,
            dataType: 'json',
            cache: false,
            success: function(data) {
                this.setState({feeds: data});
            }.bind(this),
            error: function(xhr, status, err) {
                console.error(this.props.url, status, err.toString());
            }.bind(this)
        });
    },
    handleFeedSubmit: function(feed) {
        console.log('Handle '+feed)
        var currentFeeds = this.state.feeds;
        // Optimistically set an id on the new comment. It will be replaced by an
        // id generated by the server. In a production application you would likely
        // not use Date.now() for this and would have a more robust system in place.
        feed.id = Date.now();
        $.ajax({
            url: this.props.url,
            dataType: 'json',
            type: 'POST',
            data: feed,
            success: function(data) {
                this.setState({feeds: data});
            }.bind(this),
            error: function(xhr, status, err) {
                this.setState({feeds: currentFeeds});
                console.error(this.props.url, status, err.toString());
            }.bind(this)
        });
    },
    getInitialState: function() {
        return {feeds: []};
    },
    componentDidMount: function() {
        this.loadFeedsFromServer();
        // setInterval(this.loadFeedsFromServer, this.props.pollInterval);
    },

    // Render the component
    render: function(){

        return (
            <div className="feed-app">
                <Feed onFeedSubmit={this.handleFeedSubmit}/>
                <History feeds={this.state.feeds} />
            </div>
        )

    }
});
ReactDOM.render(
    <MilkLogger url="/feed"/>,
    document.getElementById('content')
);